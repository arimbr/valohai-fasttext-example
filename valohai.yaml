---

- step:
    name: preprocess
    image: arimbr/valohai-fasttext-example
    command: python cli.py classification preprocess {parameters}
    inputs:
      - name: data
        default: s3://valohai-fasttext-example/bbc/data.csv
    parameters:
     - name: output_preprocessed
       description: name of the output file
       type: string
       default: data.preprocessed.txt

- step:
    name: split
    image: arimbr/valohai-fasttext-example
    command: python cli.py classification split {parameters}
    inputs:
      - name: data
        default: s3://valohai-fasttext-example/bbc/data.preprocessed.txt
    parameters:
      - name: output_train
        description: name of the train output file
        type: string
        default: train.preprocessed.txt
      - name: output_test
        description: name of the test output file
        type: string
        default: test.preprocessed.txt
      - name: test_ratio
        description: ratio of the test data
        type: float
        default: 0.25

- step:
    name: autotune
    image: arimbr/valohai-fasttext-example
    command: python cli.py classification autotune {parameters}
    inputs:
      - name: train
        default: s3://valohai-fasttext-example/bbc/train.preprocessed.txt
      - name: test
        default: s3://valohai-fasttext-example/bbc/test.preprocessed.txt
    parameters:
     - name: metric
       description: metric objective {f1, f1:labelname} [f1]
       type: string
       default: f1
     - name: k
       description: number of predictions used for evaluation [1]
       type: integer
       default: 1
     - name: duration
       description: maximum duration in seconds [300]
       type: integer
       default: 300
     - name: model_size
       description: constraint model file size [] (empty = do not quantize)
       type: string
       default: ''

- step:
    name: predict
    image: arimbr/valohai-fasttext-example
    command: python cli.py classification predict {parameters}
    inputs:
      - name: data
        default: s3://valohai-fasttext-example/bbc/test.preprocessed.txt
      - name: model
        default: s3://valohai-fasttext-example/bbc/train.model.bin
    parameters:
     - name: k
       description: number of labels to predict [1]
       type: integer
       default: 1

- step:
    name: train
    image: arimbr/valohai-fasttext-example
    command: python cli.py classification train {parameters}
    inputs:
      - name: data
        default: s3://valohai-fasttext-example/bbc/data.preprocessed.txt
      - name: parameters
        default: s3://valohai-fasttext-example/bbc/parameters.json

- pipeline:
    name: fasttext-pipeline
    nodes:
      - name: split
        type: execution
        step: split
      - name: preprocess
        type: execution
        step: preprocess
      - name: autotune
        type: execution
        step: autotune
      - name: train
        type: execution
        step: train
      - name: predict
        type: execution
        step: predict
      #- name: evaluate
      #  type: execution
      #  step: evaluate
    edges:
      - [preprocess.output.data.preprocessed.csv, split.input.data]
      - [preprocess.output.data.preprocessed.csv, train.input.data]
      - [split.output.train.preprocessed.txt, autotune.input.train]
      - [split.output.test.preprocessed.txt, autotune.input.test]
      - [autotune.output.parameters.json, train.input.parameters]
      - [autotune.output.model.bin, predict.input.model]
      # - [predict.output.test.predictions.csv, evaluate.input.predictions]